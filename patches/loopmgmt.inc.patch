--- /var/www/openmediavault/rpc/loopmgmt.inc	2013-03-25 10:11:09.000000000 -0400
+++ /var/www/openmediavault.devel/rpc/loopmgmt.inc	2013-03-27 23:02:11.008441940 -0400
@@ -63,7 +63,6 @@
 			"detach" => array('{
 				"type":"object",
 				"properties":{
-					"image":{'.$GLOBALS['OMV_JSONSCHEMA_DEVICEFILE'].'}
 					"devicefile":{'.$GLOBALS['OMV_JSONSCHEMA_DEVICEFILE'].'}
 				}
 			}'),
@@ -140,6 +139,12 @@
 	public function attach($data) {
 //		$this->debug(var_export(func_get_args(), TRUE));
 		global $xmlConfig;
+
+		// check the config, don't attach them if they are already attached
+                if (TRUE === $xmlConfig->exists("//services/loopmgmt/images[".
+                	"contains(.,'{$data['image']}')]"))
+                		return FALSE;
+
 		// Check permissions
 		$this->validateSession();
 		if (!$this->hasRole(OMV_ROLE_ADMINISTRATOR)) {
@@ -170,6 +175,10 @@
                         return FALSE;
 		} 
 
+		// mark the image as being in use
+		$xmlConfig->set("//services/loopmgmt",array("images" => $data['image']));
+		$xmlConfig->save();
+
 		// if it's a disk image run kpartx on it
 		if($imgtype == 1) {
                 	$cmd = sprintf("export LANG=C; sudo kpartx -a %s", $data['image']);
@@ -178,6 +187,11 @@
                        		// oops it didn't work
                         	return FALSE;
 			}
+			// mark the parent devicefile as being in use
+//                        if (TRUE === $xmlConfig->get("//services/devicefile[".
+//                         "contains(.,'{$devv['devicefile']}')]"))
+//                               continue;
+
 		}
 
 		// Notify configuration changes
@@ -201,24 +215,10 @@
 		// Validate method parameters
 //		$this->validateParams(__METHOD__, func_get_args());
 
-		// what kind of image is it?
-		$cmd = sprintf("export LANG=C; sudo /usr/local/bin/fsimgtype.sh %s", $data['image']);
-                @OMVUtil::exec($cmd, $output, $imgtype);
-                if ($imgtype == 0) {
-			// we don't do things that we don't know what they are
-                        return FALSE;
-		}
-
-		// if it's a disk image run kpartx on it
-		if($imgtype == 1) {
-                	$cmd = sprintf("export LANG=C; sudo kpartx -d %s", $data['devicefile']);
-                	@OMVUtil::exec($cmd, $output, $result);
-                	if ($result !== 0) {
-                       		// oops it didn't work
-                        	return FALSE;
-			}
-		}
-
+		// if it's got devicemapper mappings remove them first
+		$cmd = sprintf("export LANG=C; sudo kpartx -d %s", $data['devicefile']);
+                @OMVUtil::exec($cmd, $output, $result);
+		
 		// try and detach the image
                 $cmd = sprintf("export LANG=C; sudo losetup --detach %s", $data['devicefile']);
                 @OMVUtil::exec($cmd, $output, $result);
@@ -226,6 +226,9 @@
                         return FALSE;
 		}
 
+		// mark the image as being freed
+//		$xmlConfig->set("//services/loopmgmt",array("images" => $data['image']));
+
 		// Notify configuration changes.
 		$dispatcher = &OMVNotifyDispatcher::getInstance();
 		$dispatcher->notify(OMV_NOTIFY_DELETE,
